{"version":3,"sources":["components/SharedButton/SharedButton.jsx","redux/actions/types.js","components/ItemsForm/ItemsForm.jsx","redux/actions/actions.js","components/Item/Item.jsx","components/ItemsList/ItemsList.jsx","components/CommentForm/CommentForm.jsx","components/Comment/Comment.jsx","components/CommentsList/CommentsList.jsx","components/SelectLocaleForm/SelectLocaleForm.jsx","components/App/App.js","redux/reducers/items.js","redux/reducers/index.js","redux/store.js","serviceWorker.js","index.js","translations.js"],"names":["SharedButton","_ref","text","variant","color","children","className","onClick","react_default","a","createElement","Button_default","defaultProps","ADD_ITEM","DELETE_ITEM","SET_ACTIVE_ITEM","ADD_COMMENT","initialState","item","ItemsForm","state","handleChange","_ref$target","target","name","value","_this","setState","Object","defineProperty","handleSubmit","event","preventDefault","onAddItem","props","objectSpread","classes","this","t","context","container","noValidate","autoComplete","onSubmit","TextField_default","id","label","textField","placeholder","margin","onChange","components_SharedButton_SharedButton","Component","contextTypes","PropTypes","func","isRequired","compose","connect","lang","i18nState","dispatch","type","payload","v4","comments","isActive","addItem","withStyles","theme","display","flexWrap","alignItems","width","marginRight","spacing","unit","onDeleteItem","deleteItem","onSetActiveItem","setActiveItem","root","mixins","gutters","justifyContent","marginBottom","paddingTop","paddingBottom","active","border","concat","palette","primary","main","Fragment","Paper_default","classNames","elevation","Typography_default","component","ItemsList","items","itemsJSX","length","map","key","components_Item_Item","assign","list","paddingLeft","listStyle","comment","CommentForm","onAddComment","Avatar_default","avatar","multiline","addComment","padding","CommentsList","activeItem","commentsJSX","undefined","components_Comment_Comment","find","locales","SelectLocaleForm","locale","prevProps","setLanguage","options","MenuItem_default","toUpperCase","form","FormControl_default","formControl","InputLabel_default","htmlFor","Select_default","autoWidth","select","inputProps","position","bottom","left","Box","styled","div","_templateObject","typography","App","primaryText","primaryColor","grey","themeStyles","backgroundColor","background","default","common","white","mainBox","box","p","bgcolor","style","components_SelectLocaleForm_SelectLocaleForm","components_ItemsForm_ItemsForm","components_ItemsList_ItemsList","components_CommentsList_CommentsList","components_CommentForm_CommentForm","withTheme","height","flexGrow","leftIcon","iconSmall","fontSize","rootReducer","combineReducers","arguments","toConsumableArray","filter","persistConfig","storage","stateReconciler","autoMergeLevel2","pReducer","persistReducer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","persistor","persistStore","Boolean","location","hostname","match","ReactDOM","render","es","integration_react","loading","dist_default","translations","ru","TODO","Items","Comments","There are no tasks yet. Please, add a new one.","There are no comments for this task. You could add a new one.","There are no comments yet. Choose a task by clicking on it and type a comment.","Task","Type task here...","Comment","Type a comment here...","add new","Language","pl","fr","initialLang","fallbackLang","components_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.757b8376.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\n\nconst SharedButton = ({\n  text,\n  variant,\n  color,\n  children,\n  className,\n  onClick,\n}) => (\n  <div>\n    <Button\n      variant={variant}\n      color={color}\n      className={className}\n      onClick={onClick}>\n      {children}\n      {text}\n    </Button>\n  </div>\n);\n\nSharedButton.propTypes = {\n  text: PropTypes.string,\n  variant: PropTypes.string,\n  color: PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nSharedButton.defaultProps = {\n  text: 'button',\n  variant: 'contained',\n  color: 'primary',\n  className: '',\n  children: [],\n  onClick: () => {},\n};\n\nexport default SharedButton;\n","export const ADD_ITEM = 'ADD_ITEM';\nexport const DELETE_ITEM = 'DELETE_ITEM';\nexport const SET_ACTIVE_ITEM = 'SET_ACTIVE_ITEM';\nexport const ADD_COMMENT = 'ADD_COMMENT';\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport SharedButton from 'components/SharedButton/SharedButton';\nimport { addItem } from 'redux/actions/actions';\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'baseline',\n  },\n  textField: {\n    width: 300,\n    marginRight: theme.spacing.unit * 8,\n  },\n});\n\nconst initialState = {\n  item: '',\n};\n\nclass ItemsForm extends Component {\n  static propTypes = {\n    classes: PropTypes.shape({\n      container: PropTypes.string,\n      textField: PropTypes.string,\n    }).isRequired,\n    onAddItem: PropTypes.func.isRequired,\n  };\n\n  state = {\n    ...initialState,\n  };\n\n  handleChange = ({ target: { name, value } }) =>\n    this.setState({ [name]: value });\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { onAddItem } = this.props;\n    const { item } = this.state;\n\n    if (item === '') return;\n\n    onAddItem(item);\n\n    this.setState({ ...initialState });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { item } = this.state;\n    const { t } = this.context;\n\n    return (\n      <form\n        className={classes.container}\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={this.handleSubmit}>\n        <TextField\n          id=\"standard-with-placeholder\"\n          label={t('Task')}\n          name=\"item\"\n          value={item}\n          className={classes.textField}\n          placeholder={t('Type task here...')}\n          margin=\"normal\"\n          onChange={this.handleChange}\n        />\n        <SharedButton text={t('add new')} onClick={this.handleSubmit} />\n      </form>\n    );\n  }\n}\n\nItemsForm.contextTypes = {\n  t: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  lang: state.i18nState.lang,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onAddItem: text => dispatch(addItem(text)),\n});\n\nexport default compose(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  ),\n  withStyles(styles),\n)(ItemsForm);\n","import { v4 } from 'uuid';\nimport { ADD_ITEM, DELETE_ITEM, ADD_COMMENT, SET_ACTIVE_ITEM } from './types';\n\nexport const addItem = text => ({\n  type: ADD_ITEM,\n  payload: { id: v4(), text, comments: [], isActive: false },\n});\n\nexport const deleteItem = id => ({\n  type: DELETE_ITEM,\n  payload: id,\n});\n\nexport const setActiveItem = id => ({\n  type: SET_ACTIVE_ITEM,\n  payload: id,\n});\n\nexport const addComment = text => ({\n  type: ADD_COMMENT,\n  payload: { id: v4(), text },\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport SharedButton from 'components/SharedButton/SharedButton';\nimport { deleteItem, setActiveItem } from 'redux/actions/actions';\n\nconst styles = theme => ({\n  root: {\n    ...theme.mixins.gutters(),\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'baseline',\n    marginBottom: theme.spacing.unit * 2,\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n  },\n  active: {\n    border: `2px solid ${theme.palette.primary.main}`,\n  },\n});\n\nconst Item = ({\n  id,\n  text,\n  isActive,\n  classes,\n  onSetActiveItem,\n  onDeleteItem,\n}) => (\n  <>\n    <Paper\n      className={classNames(classes.root, isActive && classes.active)}\n      elevation={1}\n      onClick={() => onSetActiveItem(id)}>\n      <Typography component=\"p\">{text}</Typography>\n      <SharedButton\n        variant=\"outlined\"\n        color=\"secondary\"\n        text=\"delete\"\n        onClick={() => onDeleteItem(id)}\n      />\n    </Paper>\n  </>\n);\n\nItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  isActive: PropTypes.bool.isRequired,\n  classes: PropTypes.shape({\n    root: PropTypes.string.isRequired,\n  }).isRequired,\n  onSetActiveItem: PropTypes.func.isRequired,\n  onDeleteItem: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteItem: id => dispatch(deleteItem(id)),\n  onSetActiveItem: id => dispatch(setActiveItem(id)),\n});\n\nexport default compose(\n  connect(\n    null,\n    mapDispatchToProps,\n  ),\n  withStyles(styles),\n)(Item);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Item from 'components/Item/Item';\n\nconst styles = () => ({\n  list: {\n    paddingLeft: 0,\n    listStyle: 'none',\n  },\n});\n\nconst ItemsList = ({ items, classes }, context) => {\n  const itemsJSX =\n    items.length > 0 ? (\n      items.map(item => (\n        <li key={item.id}>\n          <Item elevation={1} {...item} />\n        </li>\n      ))\n    ) : (\n      <Typography variant=\"h5\" component=\"h5\">\n        {context.t('There are no tasks yet. Please, add a new one.')}\n      </Typography>\n    );\n\n  return <ul className={classes.list}>{itemsJSX}</ul>;\n};\n\nItemsList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.id,\n      text: PropTypes.string,\n      isActive: PropTypes.bool,\n      comments: PropTypes.arrayOf(\n        PropTypes.shape({ id: PropTypes.id, text: PropTypes.string }),\n      ),\n    }),\n  ),\n  classes: PropTypes.shape({\n    list: PropTypes.string,\n  }).isRequired,\n};\n\nItemsList.defaultProps = {\n  items: [],\n};\n\nItemsList.contextTypes = {\n  t: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  items: state.items,\n  lang: state.i18nState.lang,\n});\n\nexport default compose(\n  connect(\n    mapStateToProps,\n    null,\n  ),\n  withStyles(styles),\n)(ItemsList);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { addComment } from 'redux/actions/actions';\nimport Avatar from '@material-ui/core/Avatar';\nimport TextField from '@material-ui/core/TextField';\nimport SharedButton from 'components/SharedButton/SharedButton';\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'baseline',\n    padding: theme.spacing.unit * 3,\n  },\n  avatar: {\n    marginRight: theme.spacing.unit * 4,\n  },\n  textField: {\n    width: 300,\n    marginRight: theme.spacing.unit * 8,\n  },\n});\n\nconst initialState = {\n  comment: '',\n};\n\nclass CommentForm extends Component {\n  static propTypes = {\n    classes: PropTypes.shape({\n      container: PropTypes.string,\n      avatar: PropTypes.string,\n      textField: PropTypes.string,\n    }).isRequired,\n    onAddComment: PropTypes.func.isRequired,\n  };\n\n  state = {\n    ...initialState,\n  };\n\n  handleChange = ({ target: { name, value } }) =>\n    this.setState({ [name]: value });\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { onAddComment } = this.props;\n    const { comment } = this.state;\n\n    if (comment === '') return;\n\n    onAddComment(comment);\n\n    this.setState({ ...initialState });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { comment } = this.state;\n    const { t } = this.context;\n\n    return (\n      <form\n        className={classes.container}\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={this.handleSubmit}>\n        <Avatar className={classes.avatar} />\n        <TextField\n          id=\"standard-textarea\"\n          label={t('Comment')}\n          name=\"comment\"\n          value={comment}\n          className={classes.textField}\n          placeholder={t('Type a comment here...')}\n          multiline\n          margin=\"normal\"\n          onChange={this.handleChange}\n        />\n        <SharedButton text={t('add new')} onClick={this.handleSubmit} />\n      </form>\n    );\n  }\n}\n\nCommentForm.contextTypes = {\n  t: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  lang: state.i18nState.lang,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onAddComment: text => dispatch(addComment(text)),\n});\n\nexport default compose(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  ),\n  withStyles(styles),\n)(CommentForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n  root: {\n    ...theme.mixins.gutters(),\n    display: 'flex',\n    marginBottom: theme.spacing.unit * 2,\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n  },\n  avatar: {\n    marginRight: theme.spacing.unit * 4,\n  },\n});\n\nconst Comment = ({ text, classes }) => (\n  <>\n    <Paper className={classes.root} elevation={1}>\n      <Avatar className={classes.avatar} />\n      <Typography component=\"p\">{text}</Typography>\n    </Paper>\n  </>\n);\n\nComment.propTypes = {\n  text: PropTypes.string.isRequired,\n  classes: PropTypes.shape({\n    root: PropTypes.string,\n    avatar: PropTypes.string,\n  }).isRequired,\n};\n\nexport default withStyles(styles)(Comment);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Comment from 'components/Comment/Comment';\n\nconst styles = () => ({\n  list: {\n    paddingLeft: 0,\n    listStyle: 'none',\n  },\n});\n\nconst CommentsList = ({ activeItem, classes }, context) => {\n  const commentsJSX =\n    // eslint-disable-next-line no-nested-ternary\n    activeItem !== undefined ? (\n      activeItem.comments.length > 0 ? (\n        activeItem.comments.map(comment => (\n          <li key={comment.id}>\n            <Comment elevation={1} {...comment} />\n          </li>\n        ))\n      ) : (\n        <Typography variant=\"h5\" component=\"h5\">\n          {context.t(\n            'There are no comments for this task. You could add a new one.',\n          )}\n        </Typography>\n      )\n    ) : (\n      <Typography variant=\"h5\" component=\"h5\">\n        {context.t(\n          'There are no comments yet. Choose a task by clicking on it and type a comment.',\n        )}\n      </Typography>\n    );\n\n  return <ul className={classes.list}>{commentsJSX}</ul>;\n};\n\nCommentsList.propTypes = {\n  activeItem: PropTypes.shape({\n    id: PropTypes.string,\n    text: PropTypes.string,\n    isActive: PropTypes.bool,\n    comments: PropTypes.arrayOf(\n      PropTypes.shape({ id: PropTypes.id, text: PropTypes.string }),\n    ),\n  }),\n  classes: PropTypes.shape({\n    list: PropTypes.string,\n  }).isRequired,\n};\n\nCommentsList.defaultProps = {\n  activeItem: undefined,\n};\n\nCommentsList.contextTypes = {\n  t: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  activeItem: state.items.find(item => item.isActive && item),\n  lang: state.i18nState.lang,\n});\n\nexport default compose(\n  connect(\n    mapStateToProps,\n    null,\n  ),\n  withStyles(styles),\n)(CommentsList);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { setLanguage } from 'redux-i18n';\nimport { withStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\n\nconst styles = () => ({\n  form: {\n    position: 'absolute',\n    bottom: '25%',\n    left: '25%',\n  },\n  formControl: {\n    width: '100px',\n  },\n});\n\nconst locales = ['en', 'ru', 'pl', 'fr'];\n\nclass SelectLocaleForm extends Component {\n  static propTypes = {\n    lang: PropTypes.string.isRequired,\n    classes: PropTypes.shape({\n      form: PropTypes.string,\n      formControl: PropTypes.string,\n    }).isRequired,\n    dispatch: PropTypes.func.isRequired,\n  };\n\n  state = {\n    locale: this.props.lang,\n  };\n\n  componentDidUpdate(prevProps) {\n    const { locale } = this.state;\n    const { dispatch } = this.props;\n\n    if (prevProps.lang !== locale) {\n      dispatch(setLanguage(locale));\n    }\n  }\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { locale } = this.state;\n    const { t } = this.context;\n\n    const options = locales.map(locale => (\n      <MenuItem key={locale} value={locale}>\n        {locale.toUpperCase()}\n      </MenuItem>\n    ));\n\n    return (\n      <form className={classes.form} autoComplete=\"off\">\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"locale\">{t('Language')}</InputLabel>\n          <Select\n            autoWidth\n            value={locale}\n            className={classes.select}\n            onChange={this.handleChange}\n            inputProps={{\n              name: 'locale',\n              id: 'locale',\n            }}>\n            {options}\n          </Select>\n        </FormControl>\n      </form>\n    );\n  }\n}\n\nSelectLocaleForm.contextTypes = {\n  t: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  lang: state.i18nState.lang,\n});\n\nexport default compose(\n  connect(\n    mapStateToProps,\n    null,\n  ),\n  withStyles(styles),\n)(SelectLocaleForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { withTheme, withStyles } from '@material-ui/core/styles';\nimport { palette, spacing, typography } from '@material-ui/system';\nimport Typography from '@material-ui/core/Typography';\nimport ItemsForm from 'components/ItemsForm/ItemsForm';\nimport ItemsList from 'components/ItemsList/ItemsList';\nimport CommentForm from 'components/CommentForm/CommentForm';\nimport CommentsList from 'components/CommentsList/CommentsList';\nimport SelectLocaleForm from '../SelectLocaleForm/SelectLocaleForm';\n\nconst Box = styled.div`${palette}${spacing}${typography}`;\n\nconst styles = theme => ({\n  container: {\n    width: '100%',\n  },\n  mainBox: {\n    display: 'flex',\n    height: '100vh',\n  },\n  box: {\n    position: 'relative',\n    flexGrow: 1,\n  },\n  leftIcon: {\n    marginRight: theme.spacing.unit,\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n});\n\nconst App = ({ theme, classes }, context) => {\n  const primaryText = theme.palette.text.primary;\n  const primaryColor = theme.palette.grey;\n\n  const themeStyles = {\n    primaryText: {\n      backgroundColor: theme.palette.background.default,\n      padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\n      color: primaryText,\n    },\n    primaryColor: {\n      backgroundColor: primaryColor,\n      padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\n      color: theme.palette.common.white,\n    },\n  };\n\n  return (\n    <div className={classes.container}>\n      <Box className={classes.mainBox}>\n        <Box className={classes.box} p={3} bgcolor=\"grey\">\n          <Typography\n            variant=\"h2\"\n            component=\"h1\"\n            style={themeStyles.primaryColor}>\n            {context.t('todo'.toUpperCase())}\n          </Typography>\n          <SelectLocaleForm />\n        </Box>\n        <Box className={classes.box} p={3}>\n          <Typography\n            variant=\"h3\"\n            component=\"h2\"\n            style={themeStyles.primaryText}>\n            {context.t('Items')}\n          </Typography>\n          <ItemsForm />\n          <ItemsList />\n        </Box>\n        <Box className={classes.box} p={3}>\n          <Typography\n            variant=\"h3\"\n            component=\"h2\"\n            style={themeStyles.primaryText}>\n            {context.t('Comments')}\n          </Typography>\n          <CommentsList />\n          <CommentForm />\n        </Box>\n      </Box>\n    </div>\n  );\n};\n\nApp.propTypes = {\n  theme: PropTypes.shape({}).isRequired,\n  classes: PropTypes.shape({\n    container: PropTypes.string,\n    mainBox: PropTypes.string,\n    box: PropTypes.string,\n    iconSmall: PropTypes.string,\n    leftIcon: PropTypes.string,\n  }).isRequired,\n};\n\nApp.contextTypes = {\n  t: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  lang: state.i18nState.lang,\n});\n\nexport default compose(\n  connect(\n    mapStateToProps,\n    null,\n  ),\n  withTheme(),\n  withStyles(styles),\n)(App);\n","import {\n  ADD_ITEM,\n  DELETE_ITEM,\n  SET_ACTIVE_ITEM,\n  ADD_COMMENT,\n} from 'redux/actions/types';\n\nconst initialState = [];\n\nexport default function itemsReducer(state = initialState, { type, payload }) {\n  // console.log(type, payload);\n  switch (type) {\n    case ADD_ITEM:\n      return [...state, payload];\n    case DELETE_ITEM:\n      return state.filter(item => item.id !== payload);\n    case SET_ACTIVE_ITEM:\n      return state.map(item => ({\n        ...item,\n        isActive: item.id === payload,\n      }));\n    case ADD_COMMENT:\n      return state.map(item =>\n        item.isActive\n          ? {\n              ...item,\n              comments: [...item.comments, payload],\n            }\n          : item,\n      );\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport { i18nState } from 'redux-i18n';\nimport itemsReducer from './items';\n\nconst rootReducer = combineReducers({\n  items: itemsReducer,\n  i18nState,\n});\n\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\nimport storage from 'redux-persist/lib/storage';\nimport rootReducer from './reducers';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  stateReconciler: autoMergeLevel2,\n};\n\nconst pReducer = persistReducer(persistConfig, rootReducer);\n\n/* eslint-disable no-underscore-dangle */\nconst store = createStore(\n  pReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n/* eslint-enable */\n\nexport const persistor = persistStore(store);\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/lib/integration/react';\nimport I18n from 'redux-i18n';\nimport translations from './translations';\nimport App from 'components/App/App';\nimport store, { persistor } from './redux/store';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <I18n translations={translations} initialLang=\"en\" fallbackLang=\"en\">\n        <App />\n      </I18n>\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export default {\n  ru: {\n    TODO: 'Cписок задач',\n    Items: 'Задачи',\n    Comments: 'Комментарии',\n    'There are no tasks yet. Please, add a new one.':\n      'Здесь пока нет задач. Пожалуйста, добавьте новую задачу.',\n    'There are no comments for this task. You could add a new one.':\n      'К этой задаче нет комментариев. Вы можете добавить свой комментарий.',\n    'There are no comments yet. Choose a task by clicking on it and type a comment.':\n      'Здесь пока нет комментариев. Выберите задачу и оставьте к ней свой комментарий.',\n    Task: 'Задача',\n    'Type task here...': 'Напишите здесь название задачи',\n    Comment: 'Комментарий',\n    'Type a comment here...': 'Напишите здесь комментарий',\n    'add new': 'Добавить',\n    Language: 'Язык',\n  },\n  pl: {\n    TODO: 'Do zrobienia',\n    Items: 'Zadania',\n    Comments: 'Komentarze',\n    'There are no tasks yet. Please, add a new one.':\n      'Nie ma jeszcze żadnych zadań. Dodaj nowe zadanie.',\n    'There are no comments for this task. You could add a new one.':\n      'Brak komentarzy do tego zadania. Możesz dodać nowy.',\n    'There are no comments yet. Choose a task by clicking on it and type a comment.':\n      'Nie ma jeszcze żadnych komentarzy. Wybierz zadanie i zostaw komentarz.',\n    Task: 'Zadanie',\n    'Type task here...': 'Wpisz tutaj zadanie...',\n    Comment: 'Komentarz',\n    'Type a comment here...': 'Napisz komentarz tutaj',\n    'add new': 'dodaj',\n    Language: 'Język',\n  },\n  fr: {\n    TODO: 'Liste de tâches',\n    Items: 'Tâches',\n    Comments: 'Commentaires',\n    'There are no tasks yet. Please, add a new one.':\n      \"Il n'y a pas encore de tâches. S'il vous plaît ajouter une nouvelle tâche.\",\n    'There are no comments for this task. You could add a new one.':\n      \"Il n'y a pas de commentaires pour cette tâche. Vous pouvez en ajouter un nouveau.\",\n    'There are no comments yet. Choose a task by clicking on it and type a comment.':\n      \"Il n'y a pas encore de commentaires ici. Sélectionnez une tâche et laissez un commentaire.\",\n    Task: 'La tâche',\n    'Type task here...': 'Tapez la tâche ici...',\n    Comment: 'Commentaire',\n    'Type a comment here...': 'Tapez un commentaire ici...',\n    'add new': 'ajouter',\n    Language: 'La langue',\n  },\n};\n"],"sourceRoot":""}